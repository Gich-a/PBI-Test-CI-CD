name: Power BI Deployment Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run PBIP Structural Tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Python dependencies
        run: pip install -r requirements.txt

      - name: 🧪 Run PBIP structure tests
        run: python tests/tests.py powerbi/

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    name: Deploy PBIP to DEV Workspace

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy PBIP to DEV Workspace
        env:
          TENANT_ID: ${{ secrets.PBI_TENANT_ID }}
          CLIENT_ID: ${{ secrets.PBI_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.PBI_CLIENT_SECRET }}
          WORKSPACE_ID: ${{ secrets.PBI_WORKSPACE_ID_DEV }}
        run: pwsh -c "
          Import-Module './FabricPS-PBIP.psm1'

          $ClientId = $env:CLIENT_ID
          $ClientSecret = $env:CLIENT_SECRET
          $TenantId = $env:TENANT_ID
          $WorkspaceId = $env:WORKSPACE_ID

          if (-not $ClientId -or -not $ClientSecret -or -not $TenantId -or -not $WorkspaceId) {
            throw '🔐 Missing required environment variables.'
          }

          Connect-PowerBIServiceAccount -ServicePrincipal -TenantId $TenantId -ApplicationId $ClientId -ClientSecret $ClientSecret

          Write-Host '📁 Verifying PBIP project folder...'
          $pbipPath = './powerbi/AdventureWorks Report.pbip'
          if (!(Test-Path $pbipPath)) {
            throw '❌ PBIP project folder not found.'
          }

          Write-Host '📦 Deploying PBIP artifact...'
          Publish-PowerBIProject -Path $pbipPath -WorkspaceId $WorkspaceId -EnableRefresh -Overwrite

          Write-Host '✅ Deployment successful.'
          "
